{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tReal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/nixuniversalsdk\/imeasurementdata\/treal"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/nixuniversalsdk\/imeasurementdata\/treal"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData\/tReal","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Flag describing the units for the reported temperature measurement. When "},{"type":"codeVoice","code":"true"},{"type":"text","text":", temperature values are ‘real’ (floating point, degrees C). When "},{"type":"codeVoice","code":"false"},{"type":"text","text":", temperatures are reported on an arbitrary raw scale. Value is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the device did not support temperature measurements. Optional "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" value wrapped in a "},{"type":"codeVoice","code":"NSNumber"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"tReal"}],"role":"symbol","title":"tReal","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tReal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":"?"}],"symbolKind":"property","externalID":"c:@M@NixUniversalSDK@objc(pl)IMeasurementData(py)tReal","required":true,"modules":[{"name":"NixUniversalSDK"}]},"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData"]]},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"role":"symbol","title":"DeviceResultCallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeviceResultCallback"}],"abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"url":"\/documentation\/nixuniversalsdk\/deviceresultcallback"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","title":"NixUniversalSDK","abstract":[{"type":"text","text":"A framework to allow integration of Nix devices into third party iOS and macOS applications."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","kind":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"role":"symbol","title":"IDeviceCompat","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDeviceCompat"}],"abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" objects are found nearby using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IDeviceCompat"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IMeasurementData":{"role":"symbol","title":"IMeasurementData","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IMeasurementData"}],"abstract":[{"type":"text","text":"Protocol defining the properties and methods provided by Nix device measurements. These objects are provided in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"type":"text","text":" callback after a measurement is taken using an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance, or can be reconstructed from raw string data using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/MeasurementData\/fromRaw(_:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IMeasurementData"}],"url":"\/documentation\/nixuniversalsdk\/imeasurementdata"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IMeasurementData/tReal":{"navigatorTitle":[{"kind":"identifier","text":"tReal"}],"role":"symbol","title":"tReal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"tReal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Flag describing the units for the reported temperature measurement. When "},{"type":"codeVoice","code":"true"},{"type":"text","text":", temperature values are ‘real’ (floating point, degrees C). When "},{"type":"codeVoice","code":"false"},{"type":"text","text":", temperatures are reported on an arbitrary raw scale. Value is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the device did not support temperature measurements. Optional "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" value wrapped in a "},{"type":"codeVoice","code":"NSNumber"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData\/tReal","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/nixuniversalsdk\/imeasurementdata\/treal"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/MeasurementData/fromRaw(_:)":{"role":"symbol","title":"fromRaw(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromRaw"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"IMeasurementData","preciseIdentifier":"c:@M@NixUniversalSDK@objc(pl)IMeasurementData"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Reconstructs a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IMeasurementData"},{"type":"text","text":" instance from its raw string value, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the data is invalid."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/MeasurementData\/fromRaw(_:)","kind":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk\/measurementdata\/fromraw(_:)"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Property"},{"op":"replace","path":"\/metadata\/title","value":"tReal"},{"op":"replace","path":"\/metadata\/symbolKind","value":"property"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"identifier","text":"tReal"}]},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":", "},{"kind":"keyword","text":"strong"},{"kind":"text","text":", "},{"kind":"keyword","text":"readonly"},{"kind":"text","text":") "},{"kind":"typeIdentifier","text":"NSNumber","preciseIdentifier":"c:objc(cs)NSNumber"},{"kind":"text","text":" * "},{"kind":"identifier","text":"tReal"}],"languages":["occ"],"platforms":["macOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","value":"IDeviceCompat"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","value":[{"kind":"identifier","text":"IDeviceCompat"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData\/title","value":"IMeasurementData"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData\/fragments","value":[{"kind":"identifier","text":"IMeasurementData"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData~1tReal\/title","value":"tReal"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IMeasurementData~1tReal\/fragments","value":[{"kind":"identifier","text":"tReal"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}