{"abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE2000 formula using default model parameters (kL = kC = kH = 1.0). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"sections":[],"variants":[{"paths":["\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:)"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaE00"},{"kind":"text","text":"("},{"text":"lab1","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"lab2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First CIELAB value (element order L, a, b)"}]}],"name":"lab1"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Second CIELAB value (element order L, a, b)","type":"text"}]}],"name":"lab2"}],"kind":"parameters"},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"dE (CIE2000) value"}]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)"},"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils"]]},"metadata":{"title":"deltaE00(lab1:lab2:)","role":"symbol","externalID":"c:@M@NixUniversalSDK@objc(cs)ColorUtils(cm)deltaE00WithLab1:lab2:","modules":[{"name":"NixUniversalSDK"}],"navigatorTitle":[{"text":"deltaE00WithLab1:lab2:","kind":"identifier"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"deltaE00","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lab1"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"symbolKind":"method","roleHeading":"Type Method"},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"abstract":[{"type":"text","text":"A framework to allow integration of Nix devices into third party iOS and macOS applications."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","title":"NixUniversalSDK","url":"\/documentation\/nixuniversalsdk","role":"collection","kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ColorUtils","kind":"identifier"}],"abstract":[{"text":"Color math utility functions","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ColorUtils"}],"url":"\/documentation\/nixuniversalsdk\/colorutils","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils","role":"symbol","title":"ColorUtils","type":"topic","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE00(lab1:lab2:)":{"title":"deltaE00(lab1:lab2:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:)","abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE2000 formula using default model parameters (kL = kC = kH = 1.0). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaE00"},{"kind":"text","text":"("},{"text":"lab1","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","navigatorTitle":[{"text":"deltaE00WithLab1:lab2:","kind":"identifier"}],"role":"symbol"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","op":"replace","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Type Method"},{"value":"deltaE00WithLab1:lab2:","op":"replace","path":"\/metadata\/title"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"text","text":"+ "},{"text":"deltaE00WithLab1:lab2:","kind":"identifier"}]},{"op":"add","path":"\/topicSections","value":null},{"value":null,"op":"add","path":"\/relationshipsSections"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"op":"replace","value":{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"text","text":"+ ("},{"preciseIdentifier":"c:d","kind":"typeIdentifier","text":"double"},{"text":") ","kind":"text"},{"text":"deltaE00WithLab1:","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSArray","text":"NSArray<NSNumber *>"},{"kind":"text","text":" *) "},{"text":"lab1","kind":"internalParam"},{"text":" ","kind":"text"},{"text":"lab2:","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NSArray<NSNumber *>","preciseIdentifier":"c:Q$objc(cs)NSArray","kind":"typeIdentifier"},{"text":" *) ","kind":"text"},{"text":"lab2","kind":"internalParam"},{"text":";","kind":"text"}],"languages":["occ"]}],"kind":"declarations"},"path":"\/primaryContentSections\/0"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/title","op":"replace","value":"ColorUtils"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/fragments","op":"replace","value":[{"text":"ColorUtils","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:)\/title","op":"replace","value":"deltaE00WithLab1:lab2:"},{"value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"deltaE00WithLab1:lab2:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:)\/fragments"}],"traits":[{"interfaceLanguage":"occ"}]}]}