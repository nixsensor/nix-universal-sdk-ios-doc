{"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/adaptXyz(xyzIn:refIn:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/clipXyz(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:kL:kC:kH:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE76(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94(lab1:lab2:kL:k1:k2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94G(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94T(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaECmc(lab1:lab2:l:c:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToLch(labIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToXyz(lab:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLab(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLuv(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToLch(luvIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToXyz(luvIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/sRgbToXyz(sRgb:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToDensity(lambda:reflectance:status:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToXyz(lambda:reflectance:illuminant:observer:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLab(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLuv(xyzIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToSrgb(xyzIn:refIn:)"]}],"metadata":{"modules":[{"name":"NixUniversalSDK"}],"roleHeading":"Class","title":"ColorUtils","externalID":"c:@M@NixUniversalSDK@objc(cs)ColorUtils","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ColorUtils","kind":"identifier"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ColorUtils"}],"role":"symbol"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils"},"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/com.nixsensor.universalsdk\/objc(cs)NSObject"],"title":"Inherits From"},{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/objc(pl)NSObject","doc:\/\/com.nixsensor.universalsdk\/s7CVarArgP","doc:\/\/com.nixsensor.universalsdk\/s28CustomDebugStringConvertibleP","doc:\/\/com.nixsensor.universalsdk\/s23CustomStringConvertibleP","doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ColorUtils"}],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/nixuniversalsdk\/colorutils"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/colorutils"]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"abstract":[{"text":"Color math utility functions","type":"text"}],"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/spectral10ToXyz(lambda:reflectance:illuminant:observer:)":{"title":"spectral10ToXyz(lambda:reflectance:illuminant:observer:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/spectral10toxyz(lambda:reflectance:illuminant:observer:)","type":"topic","kind":"symbol","abstract":[{"text":"Takes reflectance data on 10 nm intervals and calculates a CIEXYZ value according to ASTM E308. Data must be provided on 10 nm intervals corresponding to the nearest 10 nanometer. CIEXYZ values are calculated across the range 360 - 780 nm. If the provided data spans a shorter range (eg - 400 - 700 nm), the values at the boundaries are repeated.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spectral10ToXyz"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lambda"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"reflectance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Float","preciseIdentifier":"s:Sf","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"illuminant"},{"kind":"text","text":": "},{"text":"Illuminant","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@Illuminant"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"observer"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@Observer","text":"Observer"},{"text":") -> ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToXyz(lambda:reflectance:illuminant:observer:)","navigatorTitle":[{"text":"spectral10ToXyzWithLambda:reflectance:illuminant:observer:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE00(lab1:lab2:kL:kC:kH:)":{"title":"deltaE00(lab1:lab2:kL:kC:kH:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:kl:kc:kh:)","abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE2000 formula. Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deltaE00","kind":"identifier"},{"kind":"text","text":"("},{"text":"lab1","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"lab2"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"kL"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":", ","kind":"text"},{"text":"kC","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":", ","kind":"text"},{"text":"kH","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":") -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:kL:kC:kH:)","navigatorTitle":[{"text":"deltaE00WithLab1:lab2:kL:kC:kH:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToCmyk(xyzIn:xyzRef:bpc:)":{"title":"xyzToCmyk(xyzIn:xyzRef:bpc:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztocmyk(xyzin:xyzref:bpc:)","type":"topic","kind":"symbol","abstract":[{"text":"Calculates CMYK value from XYZ input using built in lookup tables","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"xyzToCmyk","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"xyzIn"},{"kind":"text","text":": ["},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"xyzRef"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"bpc","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:)","navigatorTitle":[{"kind":"identifier","text":"xyzToCmykWithXyzIn:xyzRef:bpc:"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/clipXyz(xyz:xyzRef:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/clipXyz(xyz:xyzRef:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"clipXyz","kind":"identifier"},{"text":"(","kind":"text"},{"text":"xyz","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"text":"xyzRef","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/clipxyz(xyz:xyzref:)","abstract":[{"type":"text","text":"Clips CIEXYZ values in between 0 and the value of the reference white to ensure X,Y,Z are in the proper range."}],"navigatorTitle":[{"text":"clipXyzWithXyz:xyzRef:","kind":"identifier"}],"title":"clipXyz(xyz:xyzRef:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"cmykToXyz","kind":"identifier"},{"text":"(","kind":"text"},{"text":"cmykIn","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"refOut","kind":"externalParam"},{"kind":"text","text":": ["},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"bpc"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"m"},{"text":": [[","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":"]], ","kind":"text"},{"kind":"externalParam","text":"input"},{"text":": [[","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"]], ","kind":"text"},{"text":"clut","kind":"externalParam"},{"kind":"text","text":": [["},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"]], ","kind":"text"},{"kind":"externalParam","text":"output"},{"kind":"text","text":": [["},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"]]) -> [","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"]","kind":"text"}],"abstract":[{"text":"Calculates XYZ value from CMYK input using lookup tables provided as input arguments","type":"text"}],"navigatorTitle":[{"text":"cmykToXyzWithCmykIn:refOut:bpc:m:input:clut:output:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/cmyktoxyz(cmykin:refout:bpc:m:input:clut:output:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","role":"symbol","title":"cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaECmc(lab1:lab2:l:c:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaECmc"},{"text":"(","kind":"text"},{"text":"lab1","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"text":"l","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"c","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"}],"navigatorTitle":[{"text":"deltaECmcWithLab1:lab2:l:c:","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltaecmc(lab1:lab2:l:c:)","title":"deltaECmc(lab1:lab2:l:c:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaECmc(lab1:lab2:l:c:)","abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CMC(l:c) formula. Depends on model parameters l and c; common values used are CMC(2:1) for acceptability and CMC(1:1) for perceptibility. Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/labToLch(labIn:)":{"abstract":[{"text":"Takes CIELAB value and converts to polar coordinates (LCH)","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"labToLch","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"labIn"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"navigatorTitle":[{"kind":"identifier","text":"labToLchWithLabIn:"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToLch(labIn:)","role":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/labtolch(labin:)","type":"topic","title":"labToLch(labIn:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/lchToLuv(lchIn:)":{"title":"lchToLuv(lchIn:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/lchtoluv(lchin:)","abstract":[{"text":"Takes LCHuv value and converts to CIELUV","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lchToLuv"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lchIn"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLuv(lchIn:)","navigatorTitle":[{"text":"lchToLuvWithLchIn:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/objc(cs)NSObject":{"title":"NSObject","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/objc(cs)NSObject"},"doc://com.nixsensor.universalsdk/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:","kind":"identifier"}],"abstract":[{"text":"Calculates CMYK value from XYZ using lookup tables provided as ","type":"text"},{"code":"inputCurves","type":"codeVoice"},{"text":" arguments","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"xyzToCmyk","kind":"identifier"},{"kind":"text","text":"("},{"text":"xyzIn","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"xyzRef"},{"kind":"text","text":": ["},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"bpc","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"m"},{"text":": [[","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":"]], ","kind":"text"},{"text":"inputCurves","kind":"externalParam"},{"kind":"text","text":": [["},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":"]], "},{"kind":"externalParam","text":"clut"},{"text":": [[","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"]], ","kind":"text"},{"kind":"externalParam","text":"outputCurves"},{"text":": [[","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":"]]) -> ["},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","title":"xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztocmyk(xyzin:xyzref:bpc:m:inputcurves:clut:outputcurves:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE94T(lab1:lab2:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94T(lab1:lab2:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaE94T"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lab1"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"kind":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae94t(lab1:lab2:)","abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE1994 formula for the textiles application (","type":"text"},{"type":"codeVoice","code":"kL"},{"text":" = 2, ","type":"text"},{"code":"k1","type":"codeVoice"},{"type":"text","text":" = 0.048, "},{"type":"codeVoice","code":"k2"},{"type":"text","text":" = 0.014). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"navigatorTitle":[{"text":"deltaE94TWithLab1:lab2:","kind":"identifier"}],"title":"deltaE94T(lab1:lab2:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/adaptXyz(xyzIn:refIn:refOut:)":{"title":"adaptXyz(xyzIn:refIn:refOut:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/adaptxyz(xyzin:refin:refout:)","type":"topic","kind":"symbol","abstract":[{"text":"Adapts colour in XYZ from one reference white to another using Bradford adaptation method. NOTE: ","type":"text"},{"code":"refIn","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"refOut"},{"type":"text","text":", "},{"type":"codeVoice","code":"xyzIn"},{"type":"text","text":" must all be on the same scale."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"adaptXyz","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"xyzIn"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"text":"refIn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"refOut"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/adaptXyz(xyzIn:refIn:refOut:)","navigatorTitle":[{"kind":"identifier","text":"adaptXyzWithXyzIn:refIn:refOut:"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/com.nixsensor.universalsdk\/s28CustomDebugStringConvertibleP"},"doc://com.nixsensor.universalsdk/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","type":"unresolvable"},"doc://com.nixsensor.universalsdk/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/com.nixsensor.universalsdk\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)":{"title":"xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztorgb(xyzin:refin:rchrom:gchrom:bchrom:wchrom:)","type":"topic","kind":"symbol","abstract":[{"text":"Calculates linear RGB from XYZ given chromaticity coordinates of RGB working space primaries and reference whites of RGB and XYZ value","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"xyzToRgb"},{"text":"(","kind":"text"},{"text":"xyzIn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"refIn"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"text":"rChrom","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"gChrom"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"bChrom","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"wChrom"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","navigatorTitle":[{"text":"xyzToRgbWithXyzIn:refIn:rChrom:gChrom:bChrom:wChrom:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"abstract":[{"type":"text","text":"A framework to allow integration of Nix devices into third party iOS and macOS applications."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","title":"NixUniversalSDK","url":"\/documentation\/nixuniversalsdk","role":"collection","kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE94(lab1:lab2:kL:k1:k2:)":{"role":"symbol","abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE1994 formula. Requires weighting factors kL, k1, and k2 which are dependent on application. Use the ","type":"text"},{"type":"codeVoice","code":"deltaE94G"},{"type":"text","text":" method for graphic design applications and the "},{"code":"deltaE94T","type":"codeVoice"},{"type":"text","text":" for textile applications. Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"title":"deltaE94(lab1:lab2:kL:k1:k2:)","navigatorTitle":[{"text":"deltaE94WithLab1:lab2:kL:k1:k2:","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94(lab1:lab2:kL:k1:k2:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deltaE94","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lab1"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"text":"kL","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":", "},{"text":"k1","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"k2"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae94(lab1:lab2:kl:k1:k2:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToLab(xyz:xyzRef:)":{"title":"xyzToLab(xyz:xyzRef:)","type":"topic","role":"symbol","navigatorTitle":[{"text":"xyzToLabWithXyz:xyzRef:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztolab(xyz:xyzref:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLab(xyz:xyzRef:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"xyzToLab","kind":"identifier"},{"kind":"text","text":"("},{"text":"xyz","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"xyzRef"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">"}],"abstract":[{"text":"Takes CIEXYZ value and its reference white to calculate CIELAB value. ","type":"text"},{"type":"codeVoice","code":"xyz"},{"type":"text","text":" and "},{"code":"xyzRef","type":"codeVoice"},{"text":" can be either unity (0 - 1) or scaled (0 - 100) input, but both vectors must be the same scale; if ","type":"text"},{"type":"codeVoice","code":"xyz"},{"text":" is unity scale, ","type":"text"},{"code":"xyzRef","type":"codeVoice"},{"text":" must also be unity scale","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/luvToXyz(luvIn:xyzRef:)":{"navigatorTitle":[{"kind":"identifier","text":"luvToXyzWithLuvIn:xyzRef:"}],"abstract":[{"text":"Takes CIELUV value and its reference white to calculate CIEXYZ value","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToXyz(luvIn:xyzRef:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/luvtoxyz(luvin:xyzref:)","kind":"symbol","title":"luvToXyz(luvIn:xyzRef:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"luvToXyz","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"luvIn"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"xyzRef"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">","kind":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ColorUtils","kind":"identifier"}],"abstract":[{"text":"Color math utility functions","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ColorUtils"}],"url":"\/documentation\/nixuniversalsdk\/colorutils","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils","role":"symbol","title":"ColorUtils","type":"topic","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToLuv(xyzIn:xyzRef:)":{"title":"xyzToLuv(xyzIn:xyzRef:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztoluv(xyzin:xyzref:)","abstract":[{"text":"Takes CIEXYZ value and its reference white to calculate CIELUV value","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"xyzToLuv"},{"text":"(","kind":"text"},{"text":"xyzIn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"xyzRef","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLuv(xyzIn:xyzRef:)","navigatorTitle":[{"text":"xyzToLuvWithXyzIn:xyzRef:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/s7CVarArgP":{"title":"Swift.CVarArg","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/s7CVarArgP"},"doc://com.nixsensor.universalsdk/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/objc(pl)NSObject"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE94G(lab1:lab2:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94G(lab1:lab2:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaE94G"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lab1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"kind":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae94g(lab1:lab2:)","abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE1994 formula for the graphic design application ("},{"code":"kL","type":"codeVoice"},{"text":" = 1, ","type":"text"},{"type":"codeVoice","code":"k1"},{"type":"text","text":" = 0.045, "},{"type":"codeVoice","code":"k2"},{"type":"text","text":" = 0.015). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"navigatorTitle":[{"kind":"identifier","text":"deltaE94GWithLab1:lab2:"}],"title":"deltaE94G(lab1:lab2:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)":{"title":"rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/rgbtoxyz(rgbin:rchrom:gchrom:bchrom:wchrom:refout:)","type":"topic","kind":"symbol","abstract":[{"text":"Calculates XYZ from linear RGB given chromaticity coordinates of RGB working space primaries and reference whites of RGB and XYZ value.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"rgbToXyz","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rgbIn"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"rChrom","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"gChrom"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"bChrom","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"text":"wChrom","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"text":"refOut","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","navigatorTitle":[{"text":"rgbToXyzWithRgbIn:rChrom:gChrom:bChrom:wChrom:refOut:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/init":{"title":"init","url":"\/documentation\/nixuniversalsdk\/colorutils\/init","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/init","role":"symbol","fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"init"}],"abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"init"}],"type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/cmykToXyz(cmykIn:refOut:bpc:)":{"title":"cmykToXyz(cmykIn:refOut:bpc:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/cmyktoxyz(cmykin:refout:bpc:)","abstract":[{"text":"Calculates XYZ value from CMYK input using built-in lookup tables","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"cmykToXyz","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cmykIn"},{"text":": [","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"refOut","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"bpc","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:)","navigatorTitle":[{"text":"cmykToXyzWithCmykIn:refOut:bpc:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToSrgb(xyzIn:refIn:)":{"title":"xyzToSrgb(xyzIn:refIn:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztosrgb(xyzin:refin:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Calculates companded sRGB value from XYZ given reference white of XYZ value"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"xyzToSrgb","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"xyzIn"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"text":"refIn","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToSrgb(xyzIn:refIn:)","navigatorTitle":[{"text":"xyzToSrgbWithXyzIn:refIn:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/luvToLch(luvIn:)":{"title":"luvToLch(luvIn:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/luvtolch(luvin:)","abstract":[{"text":"Takes CIELUV value and converts to polar coordinates (LCH)","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"luvToLch","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"luvIn"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToLch(luvIn:)","navigatorTitle":[{"text":"luvToLchWithLuvIn:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/lchToLab(lchIn:)":{"title":"lchToLab(lchIn:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/lchtolab(lchin:)","type":"topic","kind":"symbol","abstract":[{"text":"Takes LCHab value and converts to CIELAB","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lchToLab"},{"kind":"text","text":"("},{"text":"lchIn","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLab(lchIn:)","navigatorTitle":[{"text":"lchToLabWithLchIn:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/labToXyz(lab:xyzRef:)":{"title":"labToXyz(lab:xyzRef:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/labtoxyz(lab:xyzref:)","abstract":[{"text":"Takes CIELAB value and its reference white to calculate CIEXYZ value","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"labToXyz","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lab"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"xyzRef","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToXyz(lab:xyzRef:)","navigatorTitle":[{"text":"labToXyzWithLab:xyzRef:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE76(lab1:lab2:)":{"title":"deltaE76(lab1:lab2:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae76(lab1:lab2:)","type":"topic","kind":"symbol","abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE1976 formula. Both CIELAB values must share the same reference white. If they do not, convert to XYZ, adapt, convert back to CIELAB before calculating dE","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"deltaE76","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lab1","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE76(lab1:lab2:)","navigatorTitle":[{"kind":"identifier","text":"deltaE76WithLab1:lab2:"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE00(lab1:lab2:)":{"title":"deltaE00(lab1:lab2:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:)","abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE2000 formula using default model parameters (kL = kC = kH = 1.0). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaE00"},{"kind":"text","text":"("},{"text":"lab1","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","navigatorTitle":[{"text":"deltaE00WithLab1:lab2:","kind":"identifier"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/sRgbToXyz(sRgb:refOut:)":{"title":"sRgbToXyz(sRgb:refOut:)","kind":"symbol","role":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/srgbtoxyz(srgb:refout:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/sRgbToXyz(sRgb:refOut:)","navigatorTitle":[{"text":"sRgbToXyzWithSRgb:refOut:","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sRgbToXyz"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sRgb"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"text":"refOut","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Calculates XYZ from sRGB value."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/spectral10ToDensity(lambda:reflectance:status:)":{"navigatorTitle":[{"text":"spectral10ToDensityWithLambda:reflectance:status:","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToDensity(lambda:reflectance:status:)","abstract":[{"text":"Takes reflectance data on 10 nm intervals and calculates CMYK densities according to ISO 5-3:2009. Data must be provided on 10 nm intervals corresponding to the nearest 10 nanometer. Density values are calculated across the range 340 - 770 nm. If the provided data spans a shorter range (eg - 400 - 700 nm), the values at the boundaries are repeated.","type":"text"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/spectral10todensity(lambda:reflectance:status:)","title":"spectral10ToDensity(lambda:reflectance:status:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"spectral10ToDensity"},{"text":"(","kind":"text"},{"text":"lambda","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"reflectance","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sf","text":"Float"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"status"},{"kind":"text","text":": "},{"text":"DensityStatus","preciseIdentifier":"c:@M@NixUniversalSDK@E@DensityStatus","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","op":"replace","path":"\/identifier\/interfaceLanguage"},{"value":"Class","op":"replace","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","value":"ColorUtils","op":"replace"},{"op":"replace","value":"class","path":"\/metadata\/symbolKind"},{"path":"\/metadata\/fragments","value":[{"text":"ColorUtils","kind":"identifier"}],"op":"replace"},{"value":[{"text":"ColorUtils","kind":"identifier"}],"path":"\/metadata\/navigatorTitle","op":"replace"},{"op":"replace","value":[{"title":"Instance Methods","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/init"]},{"title":"Type Methods","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/adaptXyz(xyzIn:refIn:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/clipXyz(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:kL:kC:kH:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE76(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94(lab1:lab2:kL:k1:k2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94G(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94T(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaECmc(lab1:lab2:l:c:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToLch(labIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToXyz(lab:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLab(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLuv(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToLch(luvIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToXyz(luvIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/sRgbToXyz(sRgb:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToDensity(lambda:reflectance:status:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToXyz(lambda:reflectance:illuminant:observer:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLab(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLuv(xyzIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToSrgb(xyzIn:refIn:)"]}],"path":"\/topicSections"},{"path":"\/relationshipsSections","value":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/objc(cs)NSObject"],"title":"Inherits From","kind":"relationships","type":"inheritsFrom"}],"op":"replace"},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"kind":"keyword","text":"@interface"},{"kind":"text","text":" "},{"text":"ColorUtils","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSObject","text":"NSObject"}],"languages":["occ"],"platforms":["macOS"]}],"kind":"declarations"},"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToXyz(lambda:reflectance:illuminant:observer:)\/title","op":"replace","value":"spectral10ToXyzWithLambda:reflectance:illuminant:observer:"},{"value":[{"text":"+ ","kind":"text"},{"text":"spectral10ToXyzWithLambda:reflectance:illuminant:observer:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToXyz(lambda:reflectance:illuminant:observer:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:kL:kC:kH:)\/title","value":"deltaE00WithLab1:lab2:kL:kC:kH:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:kL:kC:kH:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"deltaE00WithLab1:lab2:kL:kC:kH:"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:)\/title","value":"xyzToCmykWithXyzIn:xyzRef:bpc:","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1clipXyz(xyz:xyzRef:)\/title","value":"clipXyzWithXyz:xyzRef:"},{"value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"clipXyzWithXyz:xyzRef:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1clipXyz(xyz:xyzRef:)\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)\/title","value":"cmykToXyzWithCmykIn:refOut:bpc:m:input:clut:output:"},{"op":"replace","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"cmykToXyzWithCmykIn:refOut:bpc:m:input:clut:output:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaECmc(lab1:lab2:l:c:)\/title","op":"replace","value":"deltaECmcWithLab1:lab2:l:c:"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaECmc(lab1:lab2:l:c:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"deltaECmcWithLab1:lab2:l:c:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToLch(labIn:)\/title","value":"labToLchWithLabIn:","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToLch(labIn:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"labToLchWithLabIn:"}],"op":"replace"},{"op":"replace","value":"lchToLuvWithLchIn:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLuv(lchIn:)\/title"},{"op":"replace","value":[{"kind":"text","text":"+ "},{"text":"lchToLuvWithLchIn:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLuv(lchIn:)\/fragments"},{"value":"xyzToCmykWithXyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)\/title"},{"value":[{"kind":"text","text":"+ "},{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94T(lab1:lab2:)\/title","value":"deltaE94TWithLab1:lab2:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94T(lab1:lab2:)\/fragments","value":[{"kind":"text","text":"+ "},{"text":"deltaE94TWithLab1:lab2:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1adaptXyz(xyzIn:refIn:refOut:)\/title","value":"adaptXyzWithXyzIn:refIn:refOut:"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1adaptXyz(xyzIn:refIn:refOut:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"adaptXyzWithXyzIn:refIn:refOut:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)\/title","value":"xyzToRgbWithXyzIn:refIn:rChrom:gChrom:bChrom:wChrom:"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"xyzToRgbWithXyzIn:refIn:rChrom:gChrom:bChrom:wChrom:","kind":"identifier"}]},{"value":"deltaE94WithLab1:lab2:kL:k1:k2:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94(lab1:lab2:kL:k1:k2:)\/title"},{"op":"replace","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"deltaE94WithLab1:lab2:kL:k1:k2:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94(lab1:lab2:kL:k1:k2:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLab(xyz:xyzRef:)\/title","value":"xyzToLabWithXyz:xyzRef:"},{"value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"xyzToLabWithXyz:xyzRef:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLab(xyz:xyzRef:)\/fragments"},{"value":"luvToXyzWithLuvIn:xyzRef:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToXyz(luvIn:xyzRef:)\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToXyz(luvIn:xyzRef:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"luvToXyzWithLuvIn:xyzRef:"}]},{"value":"ColorUtils","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/title"},{"value":[{"text":"ColorUtils","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLuv(xyzIn:xyzRef:)\/title","value":"xyzToLuvWithXyzIn:xyzRef:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLuv(xyzIn:xyzRef:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"xyzToLuvWithXyzIn:xyzRef:"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94G(lab1:lab2:)\/title","value":"deltaE94GWithLab1:lab2:","op":"replace"},{"op":"replace","value":[{"text":"+ ","kind":"text"},{"text":"deltaE94GWithLab1:lab2:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94G(lab1:lab2:)\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)\/title","value":"rgbToXyzWithRgbIn:rChrom:gChrom:bChrom:wChrom:refOut:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)\/fragments","value":[{"kind":"text","text":"+ "},{"text":"rgbToXyzWithRgbIn:rChrom:gChrom:bChrom:wChrom:refOut:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:)\/title","value":"cmykToXyzWithCmykIn:refOut:bpc:"},{"value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"cmykToXyzWithCmykIn:refOut:bpc:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:)\/fragments","op":"replace"},{"op":"replace","value":"xyzToSrgbWithXyzIn:refIn:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToSrgb(xyzIn:refIn:)\/title"},{"value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"xyzToSrgbWithXyzIn:refIn:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToSrgb(xyzIn:refIn:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToLch(luvIn:)\/title","value":"luvToLchWithLuvIn:","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToLch(luvIn:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"luvToLchWithLuvIn:"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLab(lchIn:)\/title","value":"lchToLabWithLchIn:"},{"value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"lchToLabWithLchIn:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLab(lchIn:)\/fragments"},{"value":"labToXyzWithLab:xyzRef:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToXyz(lab:xyzRef:)\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToXyz(lab:xyzRef:)\/fragments","op":"replace","value":[{"text":"+ ","kind":"text"},{"text":"labToXyzWithLab:xyzRef:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE76(lab1:lab2:)\/title","value":"deltaE76WithLab1:lab2:"},{"value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"deltaE76WithLab1:lab2:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE76(lab1:lab2:)\/fragments","op":"replace"},{"value":"deltaE00WithLab1:lab2:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"deltaE00WithLab1:lab2:"}],"op":"replace"},{"value":"sRgbToXyzWithSRgb:refOut:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1sRgbToXyz(sRgb:refOut:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1sRgbToXyz(sRgb:refOut:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"sRgbToXyzWithSRgb:refOut:","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToDensity(lambda:reflectance:status:)\/title","value":"spectral10ToDensityWithLambda:reflectance:status:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToDensity(lambda:reflectance:status:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"spectral10ToDensityWithLambda:reflectance:status:","kind":"identifier"}],"op":"replace"}]}]}